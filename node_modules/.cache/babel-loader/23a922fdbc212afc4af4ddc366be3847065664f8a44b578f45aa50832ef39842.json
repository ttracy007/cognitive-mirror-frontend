{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/VS Code /cognitive-mirror-frontend/src/components/JournalTimeline.js\",\n  _s = $RefreshSig$();\n// Step 1: Import dependencies at the top of JournalTimeline.js\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/timezone';\nimport timezone from 'dayjs/plugin/timezone';\ndayjs.extend(utc);\ndayjs.extend(timezone);\nimport groupBy from 'lodash/groupBy';\nimport sortBy from 'lodash/sortBy';\nimport uniq from 'lodash/uniq';\nimport Card from './Card';\nimport { Button } from './Button';\nimport ChatBubble from './ChatBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOPIC_AND_SEVERITY_PROMPT = `\nYou are an emotional insight detector. Given a user's journal reflection, extract two things:\n\n1. Topics: the literal subjects driving the reflection — people, situations, unfinished tasks, real-world concerns. Each should be 1–3 word noun phrases. No vague emotions. Ask: “What are they actually talking about?”\n\n2. Severity: the level of emotional entrenchment or distress, on a scale of 1–5.\n\nFormat:\nTopics: [comma-separated, lowercase, literal phrases]\nSeverity: [1–5]\n`;\nexport default function JournalTimeline({\n  userId,\n  refreshTrigger\n}) {\n  _s();\n  const [journalEntries, setJournalEntries] = useState([]);\n  // const [topics, setTopics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [collapsedDays, setCollapsedDays] = useState({});\n  const [allCollapsed, setAllCollapsed] = useState(false);\n  // const [selectedTopic, setSelectedTopic] = useState('all');\n  const [selectedTheme, setSelectedTheme] = useState(null);\n  const [availableThemes, setAvailableThemes] = useState([]);\n  const [collaspedMonths, setCollapsedMonths] = useState({});\n  const extractTopicsAndSeverity = async entryText => {\n    const gptResponse = await callOpenAIChat([{\n      role: 'system',\n      content: TOPIC_AND_SEVERITY_PROMPT\n    }, {\n      role: 'user',\n      content: entryText\n    }]);\n    const topicMatch = gptResponse.match(/Topics:\\s*\\[(.*?)\\]/i);\n    const parsedTopics = topicMatch ? topicMatch[1].split(',').map(t => t.trim().toLowerCase()) : [];\n    const severityMatch = gptResponse.match(/Severity:\\s*(\\d)/i);\n    const severityRating = severityMatch && severityMatch[1] ? parseInt(severityMatch[1]) : 1;\n    return {\n      parsedTopics,\n      severityRating\n    };\n  };\n  useEffect(() => {\n    const fetchJournals = async () => {\n      setLoading(true);\n      const {\n        data,\n        error\n      } = await supabase.from('journals').select('*') // ✅ Include all fields for flexibility\n      .eq('user_id', userId).order('timestamp', {\n        ascending: false\n      });\n      if (error) {\n        console.error('❌ Error fetching journals:', error.message);\n        setLoading(false);\n        return;\n      }\n      setJournalEntries(data || []);\n      console.log('✅ journalEntries populated:', data); // Add this\n      setLoading(false);\n    };\n    fetchJournals();\n  }, [userId, refreshTrigger]);\n  const [themeOptions, setThemeOptions] = useState([]);\n\n  // Smart Insight Card \n  const [showSmartInsight, setShowSmartInsight] = useState(true);\n  const [insightTheme, setInsightTheme] = useState('');\n\n  // 🧠 Compute monthly mention count for selected theme\n  const monthlyMentions = insightTheme ? journalEntries.filter(entry => {\n    const isMatch = entry.primary_theme === insightTheme || entry.secondary_theme === insightTheme;\n    const inThisMonth = dayjs(entry.timestamp).isSame(dayjs(), 'month');\n    return isMatch && inThisMonth;\n  }).length : 0;\n\n  // ✅ FILTER THEMES: Step 1: Filter entries by selected theme before grouping\n  const filteredEntries = selectedTheme ? journalEntries.filter(entry => {\n    var _entry$primary_theme, _entry$secondary_them;\n    return ((_entry$primary_theme = entry.primary_theme) === null || _entry$primary_theme === void 0 ? void 0 : _entry$primary_theme.toLowerCase()) === selectedTheme.toLowerCase() || ((_entry$secondary_them = entry.secondary_theme) === null || _entry$secondary_them === void 0 ? void 0 : _entry$secondary_them.toLowerCase()) === selectedTheme.toLowerCase();\n  }) : journalEntries;\n  console.log('🧠 selectedTheme:', selectedTheme);\n  console.log('🧾 filteredEntries:', filteredEntries.map(e => ({\n    id: e.id,\n    primary_theme: e.primary_theme,\n    secondary_theme: e.secondary_theme,\n    timestamp: e.timestamp\n  })));\n\n  // ✅ Then group filtered entries by month\n  const groupedByMonth = groupBy(filteredEntries, entry => dayjs(entry.timestamp).format('YYYY-MM'));\n\n  //Visual Feedback for Empty Results\n  {\n    filteredEntries.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '1rem',\n        fontStyle: 'italic',\n        color: '#666'\n      },\n      children: \"No journal entries found for this topic.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this);\n  }\n  const timeline = Object.entries(groupedByMonth).map(([month, monthEntries]) => {\n    const groupedByDay = groupBy(monthEntries, entry => dayjs(entry.timestamp).format('YYYY-MM-DD'));\n    return {\n      month,\n      days: Object.entries(groupedByDay).map(([day, entries]) => ({\n        day,\n        entries: entries.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n      }))\n    };\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading journal entries...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this);\n  }\n  if (!journalEntries.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No entries found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }, this);\n  }\n  const themeSet = new Set();\n  journalEntries.forEach(entry => {\n    if (entry.primary_theme) themeSet.add(entry.primary_theme);\n    if (entry.secondary_theme && entry.secondary_theme !== 'NONE') {\n      themeSet.add(entry.secondary_theme);\n    }\n  });\n  setThemeOptions(Array.from(themeSet).sort());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"journal-timeline\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 bg-blue-600 text-white rounded\",\n        onClick: () => {\n          const newCollapsed = !allCollapsed;\n          setAllCollapsed(newCollapsed);\n          const updatedState = {};\n          timeline.forEach(month => month.days.forEach(day => {\n            updatedState[day.day] = newCollapsed;\n          }));\n          setCollapsedDays(updatedState);\n        },\n        children: allCollapsed ? 'Expand All' : 'Collapse All'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"themeFilter\",\n        children: \"\\uD83E\\uDDE0 Filter by theme:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"themeFilter\",\n        value: selectedTheme,\n        onChange: e => setSelectedTheme(e.target.value),\n        style: {\n          marginLeft: '0.5rem',\n          padding: '0.3rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Themes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 7\n        }, this), themeOptions.map(theme => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: theme,\n          children: theme\n        }, theme, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), showSmartInsight && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #e5e7eb',\n        borderRadius: '12px',\n        padding: '1rem',\n        marginBottom: '2rem',\n        backgroundColor: '#f9fafb',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '1.25rem',\n          fontWeight: '600'\n        },\n        children: \"Smart Topic Insight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: '0.75rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showSmartInsight,\n            onChange: () => setShowSmartInsight(!showSmartInsight),\n            style: {\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 9\n          }, this), \"Filter by theme:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: insightTheme,\n          onChange: e => setInsightTheme(e.target.value),\n          style: {\n            marginLeft: '0.5rem',\n            padding: '0.3rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 9\n          }, this), themeOptions.map(theme => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: theme,\n            children: theme\n          }, theme, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          marginTop: '1rem',\n          paddingLeft: '1.25rem',\n          listStyle: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCDA You\\u2019ve \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"mentioned \", insightTheme || 'this theme']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), \" \", monthlyMentions, \" times this month.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u23F0 Your reflections about \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"stress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 36\n          }, this), \" seem to spike on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"weekends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 77\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCC8 The topic \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"conflict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 24\n          }, this), \" has shown up more often in the past \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"10 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 86\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 3\n    }, this), timeline.map(monthBlock => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: dayjs(monthBlock.month).format('MMMM YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), monthBlock.days.map(dayBlock => {\n        var _collapsedDays$dayKey;\n        const dayKey = dayBlock.day;\n        const dayEntries = dayBlock.entries;\n        // Collapse all days by default except the 5 most recent\n        const allDayKeys = timeline.flatMap(month => month.days.map(d => d.day));\n        const recentDayKeys = allDayKeys.slice(0, 5); // Adjust to 3 or 7 if needed   \n        const isCollapsed = (_collapsedDays$dayKey = collapsedDays[dayKey]) !== null && _collapsedDays$dayKey !== void 0 ? _collapsedDays$dayKey : !recentDayKeys.includes(dayKey);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-block mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-left font-semibold text-gray-800 underline mb-2\",\n            onClick: () => setCollapsedDays(prev => ({\n              ...prev,\n              [dayKey]: !prev[dayKey]\n            })),\n            children: dayjs(dayKey).format('dddd, MMM D')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this), !isCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: '1rem',\n              borderLeft: '1px solid #d1d5db',\n              paddingLeft: '1rem'\n            },\n            children: dayEntries.map(entry => /*#__PURE__*/_jsxDEV(ChatBubble, {\n              entry: entry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 19\n          }, this)]\n        }, dayKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this);\n      })]\n    }, monthBlock.month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n// ✅ TOPIC MENTION USER ALIAS PROCESS\n// useEffect(() => {\n// const fetchEntries = async () => {\n//   setLoading(true);\n\n//   // ✅ Step 1: Fetch journals Topic Mention Process\n//   const { data: journalData, error: journalError } = await supabase\n//     .from('journals')\n//     .select('*')\n//     .eq('user_id', userId)\n//     .order('timestamp', { ascending: false });\n\n//   if (journalError) {\n//     console.error('❌ Error fetching journals:', journalError.message);\n//     return;\n//   }\n\n//     // ✅ Step 2: Fetch topic_mentions to join with user_topic_aliases\n//     const { data: topicData, error: topicError } = await supabase\n//       .from('topic_mentions')\n//       .select(`\n//           journal_id, \n//           topic \n//         `)\n//       .eq('user_id', userId)\n//       .order('journal_id', {ascending: false });\n\n//     if (topicError) {\n//       console.error('❌ Error fetching topics:', topicError.message);\n//       return;\n//     }\n\n//     // ✅ Step 3: Fetch user_topic_aliases\n//     const { data: aliasData, error: aliasError } = await supabase\n//       .from('user_topic_aliases')\n//       .select('alias, variant')\n//       .eq('user_id', userId);\n\n//     if (aliasError) {\n//       console.error('❌ Error fetching aliases:', aliasError.message);\n//       return;\n//     }\n\n//     // ✅ Step 4: Build alias lookup map (variant → alias)\n//     const aliasMap = {};\n//     aliasData.forEach(({ alias, variant }) => {\n//       aliasMap[variant] = alias;\n//     });\n\n//     // ✅ Step 5: Join topic_mentions to journal entries with resolved aliases\n// const entriesWithTopics = journalData.map(entry => {\n//   const relatedTopics = topicData\n//     .filter(t => t.journal_id === entry.id)\n//     .map(t => aliasMap[t.topic]) // Only use mapped aliases\n//     .filter(Boolean); // Remove undefineds\n\n//   return {\n//     ...entry,\n//     aliases: relatedTopics.length > 0 ? relatedTopics : ['misc']\n//   };\n// });\n\n// setJournalEntries(entriesWithTopics);\n\n//   // ✅ Step 6: Normalize topic list for dropdown\n// const allAliases = [...new Set(entriesWithTopics.flatMap(e => e.aliases || []))];\n// setTopics(allAliases);\n\n//     setLoading(false);\n//   };\n\n//   fetchEntries(); // Kick off data fetching\n// }, [refreshTrigger]);\n\n//   // ✅ Step 1: Filter entries by topic before grouping\n//   const filteredEntries = selectedTopic === 'all'\n//   ? journalEntries\n//   : journalEntries.filter(entry =>\n//       entry.aliases && entry.aliases.includes(selectedTopic)\n//     );\n\n// console.log('🧠 selectedTopic:', selectedTopic);\n// console.log('🧾 filteredEntries:', filteredEntries.map(e => ({\n//   id: e.id,\n//   aliases: e.aliases,\n//   timestamp: e.timestamp\n// })));\n\n//   // ✅ Then group filtered entries by month\n//   const groupedByMonth = groupBy(filteredEntries, entry =>\n//     dayjs(entry.timestamp).format('YYYY-MM')\n//   );\n\n//   //Visual Feedback for Empty Results\n//   {filteredEntries.length === 0 && (\n//     <p style={{ marginTop:'1rem', fontStyle: 'italic', color: '#666' }}>\n//       No journal entries found for this theme. \n//         </p>\n//     )}\n\n//   const timeline = Object.entries(groupedByMonth).map(([month, monthEntries]) => {\n//     const groupedByDay = groupBy(monthEntries, entry =>\n//       dayjs(entry.timestamp).format('YYYY-MM-DD')\n//     );\n\n//     return {\n//       month,\n//       days: Object.entries(groupedByDay).map(([day, entries]) => ({\n//         day,\n//         entries: entries.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n//       }))\n//     };\n//   });\n\n//   if (loading) {\n//     return <div>Loading journal entries...</div>;\n//   }\n\n//   if (!journalEntries.length) {\n//     return <div>No entries found.</div>;\n//   }\n\n// // const aliasOptions = [...new Set(journalEntries.flatMap(entry => entry.aliases || []))].sort();\n//   const aliasOptions = [\n//   ...new Set(\n//     journalEntries\n//       .filter(entry => Array.isArray(entry.aliases)) // Only entries with canonical aliases\n//       .flatMap(entry => entry.aliases)\n//   )\n// ].sort();\n\n//   return (\n//     <div className=\"journal-timeline\">\n//       <div className=\"mb-4\">\n//         <button\n//           className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n//           onClick={() => {\n//             const newCollapsed = !allCollapsed;\n//             setAllCollapsed(newCollapsed);\n\n//             const updatedState = {};\n//             timeline.forEach(month =>\n//               month.days.forEach(day => {\n//                 updatedState[day.day] = newCollapsed;\n//               })\n//             );\n//             setCollapsedDays(updatedState);\n//           }}\n//         >\n//           {allCollapsed ? 'Expand All' : 'Collapse All'}\n//         </button>\n//       </div>\n\n// {/* ✅ Add Topic Filter Dropdown Toggle */} \n//         <div style={{ marginBottom: '1rem' }}>\n//       <label htmlFor=\"topicFilter\">🧠 Filter by topic:</label>   \n\n//          <select\n//       id=\"topicFilter\"\n//       value={selectedTopic}\n//       onChange={(e) => setSelectedTopic(e.target.value)}\n//       style={{ marginLeft: '0.5rem', padding: '0.3rem' }}\n//     >\n//       <option value=\"all\">All Topics</option>\n//       {aliasOptions.map(topic => (\n//         <option key={topic} value={topic}>\n//           {topic}\n//         </option>\n//       ))}\n// </select>\n//     </div>\n\n//     {timeline.map(monthBlock => (\n//         <div key={monthBlock.month} className=\"month-block\">\n//           <h2>{dayjs(monthBlock.month).format('MMMM YYYY')}</h2>\n\n//           {monthBlock.days.map(dayBlock => {\n//             const dayKey = dayBlock.day;\n//             const dayEntries = dayBlock.entries;\n//             // Collapse all days by default except the 5 most recent\n//             const allDayKeys = timeline.flatMap(month => month.days.map(d => d.day));\n//             const recentDayKeys = allDayKeys.slice(0, 5); // Adjust to 3 or 7 if needed   \n//             const isCollapsed = collapsedDays[dayKey] ?? !recentDayKeys.includes(dayKey);\n\n//           return (\n//               <div key={dayKey} className=\"day-block mb-4\">\n//                 <button\n//                   className=\"text-left font-semibold text-gray-800 underline mb-2\"\n//                   onClick={() =>\n//                     setCollapsedDays(prev => ({\n//                       ...prev,\n//                       [dayKey]: !prev[dayKey]\n//                     }))\n//                   }\n//                 >\n//                   {dayjs(dayKey).format('dddd, MMM D')}\n//                 </button>\n\n//                 {!isCollapsed && (\n//                   <div style={{ marginLeft: '1rem', borderLeft: '1px solid #d1d5db', paddingLeft: '1rem' }}>\n//                     {dayEntries.map(entry => (\n//                       <ChatBubble entry={entry} />\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             );\n//           })}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n_s(JournalTimeline, \"lFmPDDpOtdBnt/c9D8igV6z3nQI=\");\n_c = JournalTimeline;\nvar _c;\n$RefreshReg$(_c, \"JournalTimeline\");","map":{"version":3,"names":["React","useEffect","useState","supabase","dayjs","utc","timezone","extend","groupBy","sortBy","uniq","Card","Button","ChatBubble","jsxDEV","_jsxDEV","TOPIC_AND_SEVERITY_PROMPT","JournalTimeline","userId","refreshTrigger","_s","journalEntries","setJournalEntries","loading","setLoading","collapsedDays","setCollapsedDays","allCollapsed","setAllCollapsed","selectedTheme","setSelectedTheme","availableThemes","setAvailableThemes","collaspedMonths","setCollapsedMonths","extractTopicsAndSeverity","entryText","gptResponse","callOpenAIChat","role","content","topicMatch","match","parsedTopics","split","map","t","trim","toLowerCase","severityMatch","severityRating","parseInt","fetchJournals","data","error","from","select","eq","order","ascending","console","message","log","themeOptions","setThemeOptions","showSmartInsight","setShowSmartInsight","insightTheme","setInsightTheme","monthlyMentions","filter","entry","isMatch","primary_theme","secondary_theme","inThisMonth","timestamp","isSame","length","filteredEntries","_entry$primary_theme","_entry$secondary_them","e","id","groupedByMonth","format","style","marginTop","fontStyle","color","children","fileName","_jsxFileName","lineNumber","columnNumber","timeline","Object","entries","month","monthEntries","groupedByDay","days","day","sort","a","b","Date","themeSet","Set","forEach","add","Array","className","onClick","newCollapsed","updatedState","marginBottom","htmlFor","value","onChange","target","marginLeft","padding","theme","border","borderRadius","backgroundColor","boxShadow","fontSize","fontWeight","display","alignItems","type","checked","marginRight","paddingLeft","listStyle","monthBlock","dayBlock","_collapsedDays$dayKey","dayKey","dayEntries","allDayKeys","flatMap","d","recentDayKeys","slice","isCollapsed","includes","prev","borderLeft","_c","$RefreshReg$"],"sources":["/Users/mac/Projects/VS Code /cognitive-mirror-frontend/src/components/JournalTimeline.js"],"sourcesContent":["// Step 1: Import dependencies at the top of JournalTimeline.js\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/timezone';\nimport timezone from 'dayjs/plugin/timezone';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nimport groupBy from 'lodash/groupBy';\nimport sortBy from 'lodash/sortBy';\nimport uniq from 'lodash/uniq';\nimport Card from './Card';\nimport { Button } from './Button';\nimport ChatBubble from './ChatBubble';\n\nconst TOPIC_AND_SEVERITY_PROMPT = `\nYou are an emotional insight detector. Given a user's journal reflection, extract two things:\n\n1. Topics: the literal subjects driving the reflection — people, situations, unfinished tasks, real-world concerns. Each should be 1–3 word noun phrases. No vague emotions. Ask: “What are they actually talking about?”\n\n2. Severity: the level of emotional entrenchment or distress, on a scale of 1–5.\n\nFormat:\nTopics: [comma-separated, lowercase, literal phrases]\nSeverity: [1–5]\n`;\n\nexport default function JournalTimeline({userId, refreshTrigger }) {\n  const [journalEntries, setJournalEntries] = useState([]);\n  // const [topics, setTopics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [collapsedDays, setCollapsedDays] = useState({});\n  const [allCollapsed, setAllCollapsed] = useState(false);\n  // const [selectedTopic, setSelectedTopic] = useState('all');\n  const [selectedTheme, setSelectedTheme] = useState(null);\n  const [availableThemes, setAvailableThemes] = useState([]);\n  const [collaspedMonths, setCollapsedMonths] = useState({});\n  const extractTopicsAndSeverity = async (entryText) => {\n  const gptResponse = await callOpenAIChat([\n    { role: 'system', content: TOPIC_AND_SEVERITY_PROMPT },\n    { role: 'user', content: entryText }\n  ]);\n  const topicMatch = gptResponse.match(/Topics:\\s*\\[(.*?)\\]/i);\n  const parsedTopics = topicMatch\n    ? topicMatch[1].split(',').map(t => t.trim().toLowerCase())\n    : [];\n  const severityMatch = gptResponse.match(/Severity:\\s*(\\d)/i);\n  const severityRating = severityMatch && severityMatch[1]\n    ? parseInt(severityMatch[1])\n    : 1;\n  return { parsedTopics, severityRating };\n};\n\nuseEffect(() => {\n  const fetchJournals = async () => {\n    setLoading(true);\n\n    const { data, error } = await supabase\n      .from('journals')\n      .select('*')  // ✅ Include all fields for flexibility\n      .eq('user_id', userId)\n      .order('timestamp', { ascending: false });\n\n    if (error) {\n      console.error('❌ Error fetching journals:', error.message);\n      setLoading(false);\n      return;\n    }\n\n    setJournalEntries(data || []);\n    console.log('✅ journalEntries populated:', data); // Add this\n    setLoading(false);\n  };\n\n  fetchJournals();\n}, [userId, refreshTrigger]);\n\n  const [themeOptions, setThemeOptions] = useState([]);\n\n // Smart Insight Card \nconst [showSmartInsight, setShowSmartInsight] = useState(true);\nconst [insightTheme, setInsightTheme] = useState('');\n\n// 🧠 Compute monthly mention count for selected theme\nconst monthlyMentions = insightTheme\n  ? journalEntries.filter(entry => {\n      const isMatch =\n        entry.primary_theme === insightTheme ||\n        entry.secondary_theme === insightTheme;\n      const inThisMonth =\n        dayjs(entry.timestamp).isSame(dayjs(), 'month');\n      return isMatch && inThisMonth;\n    }).length\n  : 0;\n\n \n  // ✅ FILTER THEMES: Step 1: Filter entries by selected theme before grouping\nconst filteredEntries = selectedTheme\n  ? journalEntries.filter(entry =>\n      entry.primary_theme?.toLowerCase() === selectedTheme.toLowerCase() || \n      entry.secondary_theme?.toLowerCase() === selectedTheme.toLowerCase()\n    )\n  : journalEntries;\n\nconsole.log('🧠 selectedTheme:', selectedTheme);\nconsole.log('🧾 filteredEntries:', filteredEntries.map(e => ({\n  id: e.id,\n  primary_theme: e.primary_theme,\n  secondary_theme: e.secondary_theme,\n  timestamp: e.timestamp\n})));\n\n   // ✅ Then group filtered entries by month\n  const groupedByMonth = groupBy(filteredEntries, entry =>\n    dayjs(entry.timestamp).format('YYYY-MM')\n  );\n\n  //Visual Feedback for Empty Results\n  {filteredEntries.length === 0 && (\n    <p style={{ marginTop:'1rem', fontStyle: 'italic', color: '#666' }}>\n      No journal entries found for this topic. \n        </p>\n    )}\n  \n  const timeline = Object.entries(groupedByMonth).map(([month, monthEntries]) => {\n    const groupedByDay = groupBy(monthEntries, entry =>\n      dayjs(entry.timestamp).format('YYYY-MM-DD')\n    );\n    \n    return {\n      month,\n      days: Object.entries(groupedByDay).map(([day, entries]) => ({\n        day,\n        entries: entries.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n      }))\n    };\n  });\n\n  if (loading) {\n    return <div>Loading journal entries...</div>;\n  }\n\n  if (!journalEntries.length) {\n    return <div>No entries found.</div>;\n  }\n\n  const themeSet = new Set();\n\njournalEntries.forEach(entry => {\n  if (entry.primary_theme) themeSet.add(entry.primary_theme);\n  if (entry.secondary_theme && entry.secondary_theme !== 'NONE') {\n    themeSet.add(entry.secondary_theme);\n  }\n});\n\nsetThemeOptions(Array.from(themeSet).sort());\n\n\n  return (\n    <div className=\"journal-timeline\">\n      <div className=\"mb-4\">\n        <button\n          className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n          onClick={() => {\n            const newCollapsed = !allCollapsed;\n            setAllCollapsed(newCollapsed);\n\n            const updatedState = {};\n            timeline.forEach(month =>\n              month.days.forEach(day => {\n                updatedState[day.day] = newCollapsed;\n              })\n            );\n            setCollapsedDays(updatedState);\n          }}\n        >\n          {allCollapsed ? 'Expand All' : 'Collapse All'}\n        </button>\n      </div>\n          \n{/* ✅ Add Theme Filter Dropdown Toggle */} \n        <div style={{ marginBottom: '1rem' }}>\n      <label htmlFor=\"themeFilter\">🧠 Filter by theme:</label>   \n\n         <select\n      id=\"themeFilter\"\n      value={selectedTheme}\n      onChange={(e) => setSelectedTheme(e.target.value)}\n      style={{ marginLeft: '0.5rem', padding: '0.3rem' }}\n    >\n      <option value=\"all\">All Themes</option>\n      {themeOptions.map(theme => (\n        <option key={theme} value={theme}>\n          {theme}\n        </option>\n      ))}\n</select>\n    </div>\n\n{/* 🧠 Smart Topic Insight Card */}\n{showSmartInsight && (\n  <div style={{ \n    border: '1px solid #e5e7eb', \n    borderRadius: '12px', \n    padding: '1rem', \n    marginBottom: '2rem',\n    backgroundColor: '#f9fafb',\n    boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\n  }}>\n    <h2 style={{ fontSize: '1.25rem', fontWeight: '600' }}>Smart Topic Insight</h2>\n\n    <div style={{ display: 'flex', alignItems: 'center', marginTop: '0.75rem' }}>\n      <label style={{ display: 'flex', alignItems: 'center' }}>\n        <input \n          type=\"checkbox\" \n          checked={showSmartInsight} \n          onChange={() => setShowSmartInsight(!showSmartInsight)} \n          style={{ marginRight: '0.5rem' }}\n        />\n        Filter by theme:\n      </label>\n\n      <select\n        value={insightTheme}\n        onChange={(e) => setInsightTheme(e.target.value)}\n        style={{ marginLeft: '0.5rem', padding: '0.3rem' }}\n      >\n        <option value=\"\">Select theme</option>\n        {themeOptions.map(theme => (\n          <option key={theme} value={theme}>\n            {theme}\n          </option>\n        ))}\n      </select>\n    </div>\n\n    <ul style={{ marginTop: '1rem', paddingLeft: '1.25rem', listStyle: 'none' }}>\n      <li>\n  📚 You’ve <strong>mentioned {insightTheme || 'this theme'}</strong> {monthlyMentions} times this month.\n</li>\n\n      <li>⏰ Your reflections about <strong>stress</strong> seem to spike on <strong>weekends</strong>.</li>\n      <li>📈 The topic <strong>conflict</strong> has shown up more often in the past <strong>10 days</strong>.</li>\n    </ul>\n  </div>\n)}\n\n    {timeline.map(monthBlock => (\n        <div key={monthBlock.month} className=\"month-block\">\n          <h2>{dayjs(monthBlock.month).format('MMMM YYYY')}</h2>\n\n          {monthBlock.days.map(dayBlock => {\n            const dayKey = dayBlock.day;\n            const dayEntries = dayBlock.entries;\n            // Collapse all days by default except the 5 most recent\n            const allDayKeys = timeline.flatMap(month => month.days.map(d => d.day));\n            const recentDayKeys = allDayKeys.slice(0, 5); // Adjust to 3 or 7 if needed   \n            const isCollapsed = collapsedDays[dayKey] ?? !recentDayKeys.includes(dayKey);\n                        \n          return (\n              <div key={dayKey} className=\"day-block mb-4\">\n                <button\n                  className=\"text-left font-semibold text-gray-800 underline mb-2\"\n                  onClick={() =>\n                    setCollapsedDays(prev => ({\n                      ...prev,\n                      [dayKey]: !prev[dayKey]\n                    }))\n                  }\n                >\n                  {dayjs(dayKey).format('dddd, MMM D')}\n                </button>\n\n                {!isCollapsed && (\n                  <div style={{ marginLeft: '1rem', borderLeft: '1px solid #d1d5db', paddingLeft: '1rem' }}>\n                    {dayEntries.map(entry => (\n                      <ChatBubble entry={entry} />\n                    ))}\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n  \n// ✅ TOPIC MENTION USER ALIAS PROCESS\n// useEffect(() => {\n   // const fetchEntries = async () => {\n  //   setLoading(true);\n\n  //   // ✅ Step 1: Fetch journals Topic Mention Process\n  //   const { data: journalData, error: journalError } = await supabase\n  //     .from('journals')\n  //     .select('*')\n  //     .eq('user_id', userId)\n  //     .order('timestamp', { ascending: false });\n\n  //   if (journalError) {\n  //     console.error('❌ Error fetching journals:', journalError.message);\n  //     return;\n  //   }\n  \n//     // ✅ Step 2: Fetch topic_mentions to join with user_topic_aliases\n//     const { data: topicData, error: topicError } = await supabase\n//       .from('topic_mentions')\n//       .select(`\n//           journal_id, \n//           topic \n//         `)\n//       .eq('user_id', userId)\n//       .order('journal_id', {ascending: false });\n\n//     if (topicError) {\n//       console.error('❌ Error fetching topics:', topicError.message);\n//       return;\n//     }\n\n//     // ✅ Step 3: Fetch user_topic_aliases\n//     const { data: aliasData, error: aliasError } = await supabase\n//       .from('user_topic_aliases')\n//       .select('alias, variant')\n//       .eq('user_id', userId);\n\n//     if (aliasError) {\n//       console.error('❌ Error fetching aliases:', aliasError.message);\n//       return;\n//     }\n\n//     // ✅ Step 4: Build alias lookup map (variant → alias)\n//     const aliasMap = {};\n//     aliasData.forEach(({ alias, variant }) => {\n//       aliasMap[variant] = alias;\n//     });\n    \n//     // ✅ Step 5: Join topic_mentions to journal entries with resolved aliases\n// const entriesWithTopics = journalData.map(entry => {\n//   const relatedTopics = topicData\n//     .filter(t => t.journal_id === entry.id)\n//     .map(t => aliasMap[t.topic]) // Only use mapped aliases\n//     .filter(Boolean); // Remove undefineds\n\n//   return {\n//     ...entry,\n//     aliases: relatedTopics.length > 0 ? relatedTopics : ['misc']\n//   };\n// });\n\n// setJournalEntries(entriesWithTopics);\n   \n//   // ✅ Step 6: Normalize topic list for dropdown\n// const allAliases = [...new Set(entriesWithTopics.flatMap(e => e.aliases || []))];\n// setTopics(allAliases);\n    \n//     setLoading(false);\n//   };\n\n//   fetchEntries(); // Kick off data fetching\n// }, [refreshTrigger]);\n\n//   // ✅ Step 1: Filter entries by topic before grouping\n//   const filteredEntries = selectedTopic === 'all'\n//   ? journalEntries\n//   : journalEntries.filter(entry =>\n//       entry.aliases && entry.aliases.includes(selectedTopic)\n//     );\n\n// console.log('🧠 selectedTopic:', selectedTopic);\n// console.log('🧾 filteredEntries:', filteredEntries.map(e => ({\n//   id: e.id,\n//   aliases: e.aliases,\n//   timestamp: e.timestamp\n// })));\n  \n//   // ✅ Then group filtered entries by month\n//   const groupedByMonth = groupBy(filteredEntries, entry =>\n//     dayjs(entry.timestamp).format('YYYY-MM')\n//   );\n\n//   //Visual Feedback for Empty Results\n//   {filteredEntries.length === 0 && (\n//     <p style={{ marginTop:'1rem', fontStyle: 'italic', color: '#666' }}>\n//       No journal entries found for this theme. \n//         </p>\n//     )}\n  \n//   const timeline = Object.entries(groupedByMonth).map(([month, monthEntries]) => {\n//     const groupedByDay = groupBy(monthEntries, entry =>\n//       dayjs(entry.timestamp).format('YYYY-MM-DD')\n//     );\n    \n//     return {\n//       month,\n//       days: Object.entries(groupedByDay).map(([day, entries]) => ({\n//         day,\n//         entries: entries.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n//       }))\n//     };\n//   });\n\n//   if (loading) {\n//     return <div>Loading journal entries...</div>;\n//   }\n\n//   if (!journalEntries.length) {\n//     return <div>No entries found.</div>;\n//   }\n\n// // const aliasOptions = [...new Set(journalEntries.flatMap(entry => entry.aliases || []))].sort();\n//   const aliasOptions = [\n//   ...new Set(\n//     journalEntries\n//       .filter(entry => Array.isArray(entry.aliases)) // Only entries with canonical aliases\n//       .flatMap(entry => entry.aliases)\n//   )\n// ].sort();\n\n//   return (\n//     <div className=\"journal-timeline\">\n//       <div className=\"mb-4\">\n//         <button\n//           className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n//           onClick={() => {\n//             const newCollapsed = !allCollapsed;\n//             setAllCollapsed(newCollapsed);\n\n//             const updatedState = {};\n//             timeline.forEach(month =>\n//               month.days.forEach(day => {\n//                 updatedState[day.day] = newCollapsed;\n//               })\n//             );\n//             setCollapsedDays(updatedState);\n//           }}\n//         >\n//           {allCollapsed ? 'Expand All' : 'Collapse All'}\n//         </button>\n//       </div>\n          \n// {/* ✅ Add Topic Filter Dropdown Toggle */} \n//         <div style={{ marginBottom: '1rem' }}>\n//       <label htmlFor=\"topicFilter\">🧠 Filter by topic:</label>   \n\n//          <select\n//       id=\"topicFilter\"\n//       value={selectedTopic}\n//       onChange={(e) => setSelectedTopic(e.target.value)}\n//       style={{ marginLeft: '0.5rem', padding: '0.3rem' }}\n//     >\n//       <option value=\"all\">All Topics</option>\n//       {aliasOptions.map(topic => (\n//         <option key={topic} value={topic}>\n//           {topic}\n//         </option>\n//       ))}\n// </select>\n//     </div>\n\n//     {timeline.map(monthBlock => (\n//         <div key={monthBlock.month} className=\"month-block\">\n//           <h2>{dayjs(monthBlock.month).format('MMMM YYYY')}</h2>\n\n//           {monthBlock.days.map(dayBlock => {\n//             const dayKey = dayBlock.day;\n//             const dayEntries = dayBlock.entries;\n//             // Collapse all days by default except the 5 most recent\n//             const allDayKeys = timeline.flatMap(month => month.days.map(d => d.day));\n//             const recentDayKeys = allDayKeys.slice(0, 5); // Adjust to 3 or 7 if needed   \n//             const isCollapsed = collapsedDays[dayKey] ?? !recentDayKeys.includes(dayKey);\n                        \n//           return (\n//               <div key={dayKey} className=\"day-block mb-4\">\n//                 <button\n//                   className=\"text-left font-semibold text-gray-800 underline mb-2\"\n//                   onClick={() =>\n//                     setCollapsedDays(prev => ({\n//                       ...prev,\n//                       [dayKey]: !prev[dayKey]\n//                     }))\n//                   }\n//                 >\n//                   {dayjs(dayKey).format('dddd, MMM D')}\n//                 </button>\n\n//                 {!isCollapsed && (\n//                   <div style={{ marginLeft: '1rem', borderLeft: '1px solid #d1d5db', paddingLeft: '1rem' }}>\n//                     {dayEntries.map(entry => (\n//                       <ChatBubble entry={entry} />\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             );\n//           })}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n"],"mappings":"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CC,CAAC;AAEV;;AAGA;AACA;AACG;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA1E,EAAA,CA3dwBH,eAAe;AAAAsI,EAAA,GAAftI,eAAe;AAAA,IAAAsI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}